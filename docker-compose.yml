version: '3.4'

services:
  nginx:
    container_name: nginx
    restart: unless-stopped
    volumes:
      - ./data:/data    
      - ./data/nginx/etc/nginx:/etc/nginx
      - ./data/certbot/etc/letsencrypt:/etc/letsencrypt
      - ./data/shared/var/www/static:/var/www/static
    build:
      context: .
      dockerfile: proxy/Dockerfile
    ports:
      - "80:80"
      - "443:443"
      - "8200:8200"
    links:
      - vault
    command: /bin/sh -c "
        if [ -s /data/fullchain.pem ] ;
        then echo 'Certificate exists, no need to create a self-signed certificate.' ;
        else echo 'No certificate found.  Generating temporary self signed certifcate...' ;
          openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /data/privkey.pem -out /data/fullchain.pem -subj '/C=US/ST=Washington/L=Seattle/O=Temporary/CN=$domain' ;
        fi ;
        echo 'Starting NGINX and reload loops...' ;
        while :; 
        do sleep 4 & wait $${!}; 
        echo 'Waiting for certificate copy file from cerbot...' ;
          nginx -s reload -c /data/nginx.secure.conf ;
          if [ -s /data/certbot_certificates_copied.txt ]; 
          then echo 'Certificate copy file detected, stop checking...' ; 
            break ; 
          fi ; 
        done 
        && echo 'Starting 6 hour configuration reload loop...' 
        && while :; 
        do sleep 6h & wait $${!}; 
          echo 'Reloading configuration files...' ;
          nginx -s reload -c /data/nginx.secure.conf ; 
          echo 'Sleeping for 6 hours...' ;
        done & nginx -c /data/nginx.secure.conf -g 'daemon off;'  
      "
  certbot:
    container_name: cerbot
    image: certbot/certbot
    restart: unless-stopped
    volumes:
      - ./data:/data
      - ./data/certbot/etc/letsencrypt:/etc/letsencrypt
      - ./data/shared/var/www/static:/var/www/static
    depends_on: 
      - nginx
    entrypoint: /bin/sh -c "
        while :; 
        do 
          if [ -s /etc/letsencrypt/live/primary_domain/privkey.pem ] ; 
          then echo 'Certificates exist, attempting renewal...' ; 
            certbot renew --test-cert ; 
          else echo 'Certificates do not exist, getting certificates for the first time...'; 
            certbot certonly --test-cert --webroot --webroot-path /var/www/static --cert-name primary_domain --domain $domain -n --agree-tos -m $certbot_email ; 
          fi ;
          cp /etc/letsencrypt/live/primary_domain/privkey.pem /data/privkey.pem  
          && cp /etc/letsencrypt/live/primary_domain/fullchain.pem /data/fullchain.pem 
          && echo date > /data/certbot_certificates_copied.txt
          echo 'Sleep for 12 hours...' ;
          sleep 12h ;
        done
      "
  vault:
    image: vault
    container_name: vault
    restart: always
    volumes:
      - ./data/vault/certs:/vault/certs
      - ./data/vault/logs:/vault/logs
      - ./data/vault/file:/vault/file
      - ./data/vault/config:/vault/config
    cap_add:
      - IPC_LOCK
    entrypoint: vault server -config=/vault/config/vault.json
